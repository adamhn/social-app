@using Microsoft.AspNet.Identity
@model SocialApp.ViewModels.NavigationViewModel

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">

        @Html.ActionLink("SocialMeet", "Index", "Users", new { area = "" }, new { @class = "navbar-brand mb-0 mr-4 h1" })
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">@Html.ActionLink("Explore", "Index", "Users")</li>
            </ul>
            @if (Request.IsAuthenticated)
            {
                using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                {
                    @Html.AntiForgeryToken()
                    <ul class="nav navbar-nav">
                        <li>
                            @Html.ActionLink("My Profile", "Details", "Users", routeValues: new { userId = User.Identity.GetUserId() }, htmlAttributes: new { @class = "btn btn-primary", title = "Manage" })
                        </li>
                        <li>
                            <button type="button" class="btn btn-success"  data-toggle="modal" data-target="#friendRequestModal">
                                Friend Requests <span class="badge badge-light">@Model.Friends.Count()</span>
                            </button>
                            
                            <!-- Modal -->
                            <div class="modal fade" id="friendRequestModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLongTitle">Friend Requests</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="d-flex flex-column p-2">
                                                @foreach (var friendRequest in Model.FriendRequests)
                                                {
                                                    <div class="d-flex flex-row mb-3">
                                                        <img src="@Url.Action("GetUserPhoto", "Users" , new { UserId = friendRequest.Id })" alt="Profile Picture" class="users-profile-thumbnail rounded-circle">
                                                        <p class="mt-2"><strong>@Html.ActionLink(friendRequest.GetFullName(), "Details", "Users", new { userId = friendRequest.Id }, new { @class = "text-dark" })</strong></p>
                                                        
                                                        <div class="ml-auto mt-2">
                                                            <button type="button" id="friendRequestAction" class="btn btn-sm btn-primary">Accept</button>
                                                            <button type="button" id="friendRequestAction" class="btn btn-sm btn-outline-danger">Reject</button>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li>
                            <div class="btn-group">
                                <button type="button" class="btn btn-dark dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Manage
                                </button>
                                <div class="dropdown-menu">
                                    @Html.ActionLink("Set Information", "SetInformation", "Manage", null, new {@class = "dropdown-item", title = "Set Information"})
                                    @Html.ActionLink("Set Photo", "SetPhoto", "Manage", null, new {@class = "dropdown-item", title = "My Profile"})
                                    <div class="dropdown-divider"></div>
                                    @Html.ActionLink("Change Password", "ChangePassword", "Manage", null, new {@class = "dropdown-item", title = "Change Password"})
                                </div>
                            </div>
                        </li>
                        <li><a class="btn btn-light" href="javascript:document.getElementById('logoutForm').submit()">Logout</a></li>
                    </ul>
                }
            }
            else
            {
                <ul class="navbar-nav">
                    <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
                    <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                </ul>
            }
        </div>
    </div>
</nav>